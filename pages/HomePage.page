<apex:page controller="HomePageController" showHeader="false" lightningStylesheets="true" sidebar="false" action="{!getContact}" >
    <apex:slds />





    <apex:includeScript value="//code.jquery.com/jquery-1.11.1.min.js" />
    <script>
    function apiCall() {
        //Get a reference to jQuery that we can work with
        $j = jQuery.noConflict();
        //endpoint URL
        var weblink = 'https://api.vk.com/method/friends.getOnline?user_id=18799794&message=Test&access_token=86ce95c0a02b030a0788dc2f0925cb5940b8d4581bd8309b06333beb54e4961ac92d4ba925b37634a0ac3&v=5.131'; 
        var domen = 'https://brest-carservice-developer-edition.ap27.force.com';

        $j.ajax({
            url: weblink,
            type: 'GET', //Type POST or GET
            dataType: 'json',
            beforeSend: function(request) {
                //Add all API Headers here if any
                //request.setRequestHeader('Type','Value');
                //request.setRequestHeader('Access-Control-Allow-Origin', domen);
            },
             
            crossDomain: true,
            //If Successfully executed 
            success: function(result) {
                //Response will be stored in result variable in the form of Object.
                console.log('Response Result' + result);
                 
                //Convert JSResponse Object to JSON response
                var jsonResp = JSON.stringify(result);
                document.getElementById("apiData").innerHTML = jsonResp;
            },
             
            //If any Error occured
            error: function(jqXHR, textStatus, errorThrown) {
                //alert('ErrorThrown: ' + errorThrown);
            }
        });
    }
    </script>
    <apex:form>
        <!--call javaScript-->
        <input type="button" value="Call API" onclick="apiCall()" />
        <div id="apiData">
        </div>
    </apex:form>
    
   




        <script>
        function onClickScreen(){
            var achorElement = window.location.hash.substring(1);
            var number = document.getElementById("someText").value;
            console.log(number);
            console.log(achorElement);
            //updateFields(number);
            updateFields(achorElement);
        }
        function onClickCancel(){
            cancel();
        }
    </script>

<apex:pageMessages id="msgs"/>
<apex:form id="form">

        <apex:actionFunction name="updateFields" action="{!updateCurrentRecord}" rerender="msgs">
            <apex:param name="inputTextField" value="" assignTo="{!inputText}"/>                
        </apex:actionFunction>

        <input type="text" id="someText"/>
        <button onclick="onClickScreen();" type="button">Click Me</button>
</apex:form>


        
    


    <apex:form >
        <apex:pageMessages /> <!-- this is where the error messages will appear -->                        
    </apex:form>
    
    <apex:form >        
        <apex:pageBlock >
            <apex:pageBlockSection columns="3">
               
                Hello, {!contact.Name}! <br/>
                <apex:commandButton value="Send" styleClass="btn btn-success btn-sm" action="{!calloutVK}" />
                <apex:commandButton value="Send message" styleClass="btn btn-success btn-sm" action="{!calloutVKa}" />
                <apex:commandButton value="Log out" styleClass="btn btn-success btn-sm" action="{!logOut}" />


               
                
                
                <apex:panelgrid columns="6" >
                    <apex:panelGroup>
                        <apex:outputText value="Filter by price: "/>
                        <apex:selectList value="{!selectedPrice}" size="1">
                            <apex:selectOption itemValue="None" itemLabel="None"/>
                            <apex:selectOption itemValue="< 100" itemLabel="< 100$"/>
                            <apex:selectOption itemValue=">= 100 AND Price__c <= 300"  itemLabel="100$-300$"/>
                            <apex:selectOption itemValue="> 300" itemLabel="> 300$"/>
                            <apex:actionSupport event="onchange" action="{!filterMethod}" reRender="orderTable"/>
                        </apex:selectList>
                    </apex:panelGroup>

                    <apex:panelGroup>
                        <apex:outputText value="Filter by priority: "/>
                        <apex:selectList value="{!selectedPriority}" size="1">
                            <apex:selectOption itemValue="None" itemLabel="None"/>
                            <apex:selectOption itemValue="Low" itemLabel="Low"/>
                            <apex:selectOption itemValue="Normal" itemLabel="Normal"/>
                            <apex:selectOption itemValue="Hight"  itemLabel="Hight"/>
                            <apex:actionSupport event="onchange" action="{!filterMethod}" reRender="orderTable"/>                        
                        </apex:selectList>
                    </apex:panelGroup>
                    
                    <apex:outputText value="Assign to:"/>
                    <apex:selectList value="{!selectedCarOwner}" size="1">
                        <apex:selectOptions value="{!items}"/>
                        <apex:actionSupport event="onchange" action="{!visibilityCheckbox}" reRender="orderTable"/>                                                
                    </apex:selectList>
                    <apex:commandButton value="Assign" action="{!assignCarOwner}" rerender="orderTable" />
                </apex:panelgrid>
                </apex:pageBlockSection>
        </apex:pageBlock>
            <apex:pageBlock >
                <apex:pageBlockTable value="{!wrapOrderList}" var="wrapOrder" id="orderTable">
                    <apex:column headerValue="Select">
                        <apex:inputCheckbox value="{!wrapOrder.selected}" disabled="{!wrapOrder.disabled}" id="inputId" />
                    </apex:column>                   
                    <apex:column value="{!wrapOrder.ord.Name}"/>
                    <apex:column value="{!wrapOrder.ord.Car_Owner__r.Name}" headerValue="Car Owner"/>
                    <apex:column value="{!wrapOrder.ord.Master__c}"/>                    
                    <apex:column value="{!wrapOrder.ord.Price__c}"/>
                    <apex:column value="{!wrapOrder.ord.End_Date__c}"/>
                    <apex:column value="{!wrapOrder.ord.Priority__c}"/>
                </apex:pageBlockTable>
            </apex:pageBlock>

            <apex:pageBlock>
                <apex:pageBlockTable value="{!selectedOrders}" var="c" id="table2" title="Selected Orders">
                    <apex:column value="{!c.Name}" />
                    <apex:column value="{!c.Price__c}" />                    
                </apex:pageBlockTable>
                <apex:commandButton value="Show Selected Orders" action="{!processSelected}" rerender="table2"/>
            </apex:pageBlock>

    </apex:form>
</apex:page>